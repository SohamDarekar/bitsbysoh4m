---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
  title: string;
  description?: string;
  forceGA?: boolean; // Add this prop to force GA in development
}

const { title, description = "A weekly personal blog by Soham", forceGA = false } = Astro.props;
const isProd = import.meta.env.PROD;
const loadGA = isProd || forceGA; // Load GA in production OR if forceGA is true
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover, maximum-scale=5.0" />
    <link rel="icon" type="image/svg+xml" href="/qubit_dark.png" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title} | bitsbysoh4m</title>
    <!-- Inline the theme initialization script -->
    <script is:inline>
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
    
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
      window.localStorage.setItem('theme', theme);
    </script>
    <script defer data-domain="bitsbysoh4m.netlify.app" src="https://plausible.io/js/script.js"></script>
    
    <!-- Google Analytics - Load in production or when forced for testing -->
    {loadGA && (
      <>
        <script is:inline define:vars={{ analyticsId: 'G-P300W8XW2P', isProd: import.meta.env.PROD }}>
          // Ensure we don't initialize GA multiple times
          if (!window.gaInitialized) {
            // Pre-load the dataLayer
            window.dataLayer = window.dataLayer || [];
            window.gtag = function() {
              dataLayer.push(arguments);
            };
            
            // Explicitly set gtag command to prevent overrides
            window.gtag('js', new Date());
            
            // Single config call to prevent cookie overwrites
            window.gtag('config', analyticsId, {
              cookie_domain: 'auto',
              cookie_expires: 63072000, // 2 years in seconds
              cookie_update: false,     // Prevents overwriting
              debug_mode: !isProd
            });
            
            // Load the analytics script after configuration
            const gtagScript = document.createElement('script');
            gtagScript.async = true;
            gtagScript.src = `https://www.googletagmanager.com/gtag/js?id=${analyticsId}`;
            document.head.appendChild(gtagScript);
            
            // Mark as initialized
            window.gaInitialized = true;
            
            // Log initialization
            console.log('Google Analytics configuration complete in ' + 
              (isProd ? 'production' : 'development (test mode)'));
          }
        </script>
      </>
    )}
    
  </head>
  <body class="min-h-screen bg-surface-light dark:bg-surface-dark text-gray-900 dark:text-gray-100 transition-colors">
    <div class="max-w-6xl mx-auto px-4 md:px-6 lg:px-8 py-4 md:py-6 lg:py-8">
      <Header />
      <main class="my-4 md:my-6 lg:my-8">
        <slot />
      </main>
      <Footer />
    </div>
    
    {loadGA && (
      <script is:inline>
        // Wait for page to fully load before attaching navigation event listener
        window.addEventListener('load', function() {
          // Check for gtag function with retry mechanism
          function checkGtagAndBind(retries = 3) {
            if (typeof window.gtag === 'function') {
              console.log('Google Analytics ready for tracking page views');
              
              // Handle client-side navigation
              document.addEventListener('astro:after-swap', () => {
                // Use safe event tracking method to prevent cookie overwrites
                window.gtag('event', 'page_view', {
                  send_to: 'G-P300W8XW2P',
                  page_location: window.location.href,
                  page_path: window.location.pathname,
                  page_title: document.title,
                  non_interaction: false
                });
              });
            } else if (retries > 0) {
              console.log(`Waiting for gtag to be available... (${retries} retries left)`);
              setTimeout(() => checkGtagAndBind(retries - 1), 1000);
            } else {
              console.warn('Google Analytics failed to initialize properly');
            }
          }
          
          // Start checking with 3 retries
          checkGtagAndBind(3);
        });
      </script>
    )}
  </body>
</html>

<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }
</style>