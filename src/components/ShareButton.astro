<div class="share-dropdown relative flex items-center">
  <button 
    id="shareButton" 
    class="share-btn flex items-center gap-1 text-gray-600 dark:text-gray-300 bg-transparent hover:text-gray-900 dark:hover:text-white focus:outline-none focus:ring-0 rounded-none py-0 px-0 shadow-none transition-all duration-200
      h-8 w-20 sm:h-10 sm:w-auto text-sm sm:text-base"
    aria-label="Share this post"
    aria-expanded="false"
    aria-haspopup="true"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-4 sm:w-4" viewBox="0 0 20 20" fill="currentColor">
      <path d="M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z" />
    </svg>
    <span class="text-xs sm:text-base font-medium">Share</span>
  </button>

  <div id="shareDropdown" class="share-dropdown-content absolute z-30 top-1/2 left-full ml-2 -translate-y-1/2 flex flex-col gap-1 sm:gap-2 bg-white/90 dark:bg-neutral-900/90 backdrop-blur-lg rounded-full shadow-2xl px-1.5 py-1.5 sm:px-2 sm:py-2 opacity-0 invisible scale-95 transition-all duration-200 border border-gray-100 dark:border-gray-800 min-w-0 w-auto
    sm:top-1/2 sm:left-full sm:ml-2 sm:-translate-y-1/2
    top-full left-1/2 -translate-x-1/2 mt-2 sm:mt-0 sm:translate-x-0
    ">
    <button 
      class="share-item-btn flex items-center gap-1 sm:gap-2 text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-neutral-800 focus:bg-gray-200 dark:focus:bg-neutral-700 transition-colors duration-200 rounded-full py-1.5 px-3 sm:py-2 sm:px-4 text-sm sm:text-base font-medium"
      data-platform="twitter" 
      aria-label="Share on Twitter/X"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5" viewBox="0 0 24 24" fill="currentColor">
        <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
      </svg>
    </button>
    <button 
      class="share-item-btn flex items-center gap-1 sm:gap-2 text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-neutral-800 focus:bg-gray-200 dark:focus:bg-neutral-700 transition-colors duration-200 rounded-full py-1.5 px-3 sm:py-2 sm:px-4 text-sm sm:text-base font-medium"
      data-platform="linkedin" 
      aria-label="Share on LinkedIn"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5" viewBox="0 0 24 24" fill="currentColor">
        <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.223 0h.002z"/>
      </svg>
    </button>
    <button 
      id="copyLink" 
      class="share-item-btn flex items-center gap-1 sm:gap-2 text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-neutral-800 focus:bg-gray-200 dark:focus:bg-neutral-700 transition-colors duration-200 rounded-full py-1.5 px-3 sm:py-2 sm:px-4 text-sm sm:text-base font-medium"
      aria-label="Copy link"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
        <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
      </svg>
    </button>
    <div id="copyFeedback" class="copy-feedback fixed left-1/2 top-auto bottom-[90px] sm:bottom-auto sm:top-4 -translate-x-1/2 bg-gray-800/90 dark:bg-gray-700/90 text-white px-3 py-1 rounded-full shadow-md transform transition-all duration-300 opacity-0 -translate-y-4 pointer-events-none z-50 text-xs font-medium whitespace-nowrap">
      Link copied!
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const shareButton = document.getElementById('shareButton');
    const shareDropdown = document.getElementById('shareDropdown');
    const copyLink = document.getElementById('copyLink');
    const copyFeedback = document.getElementById('copyFeedback');
    let timeoutId = null;
    let isOpen = false;

    // Toggle popover
    const toggleDropdown = () => {
      isOpen = !isOpen;
      shareButton.setAttribute('aria-expanded', isOpen.toString());
      if (isOpen) {
        shareDropdown.classList.remove('opacity-0', 'invisible', 'scale-95');
        shareDropdown.classList.add('opacity-100', 'visible', 'scale-100');
      } else {
        shareDropdown.classList.add('opacity-0', 'invisible', 'scale-95');
        shareDropdown.classList.remove('opacity-100', 'visible', 'scale-100');
      }
    };

    // Show copy feedback
    const showCopyFeedback = () => {
      copyFeedback.classList.remove('opacity-0', '-translate-y-8');
      copyFeedback.classList.add('opacity-100', 'translate-y-0');
      clearTimeout(timeoutId);
      timeoutId = setTimeout(() => {
        copyFeedback.classList.add('opacity-0', '-translate-y-8');
        copyFeedback.classList.remove('opacity-100', 'translate-y-0');
      }, 2000);
    };

    // Handle click outside
    const handleClickOutside = (event) => {
      if (isOpen && !event.target.closest('.share-dropdown')) {
        toggleDropdown();
      }
    };

    // Add event listeners
    shareButton.addEventListener('click', (e) => {
      e.stopPropagation();
      toggleDropdown();
    });

    // Handle sharing
    document.querySelectorAll('.share-item-btn').forEach(button => {
      button.addEventListener('click', async () => {
        const platform = button.getAttribute('data-platform');
        const url = encodeURIComponent(window.location.href);
        const title = encodeURIComponent(document.title);

        let shareUrl = '';
        switch (platform) {
          case 'twitter':
            shareUrl = `https://twitter.com/intent/tweet?url=${url}&text=${title}`;
            break;
          case 'linkedin':
            shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${url}`;
            break;
          default:
            if (button.id === 'copyLink') {
              try {
                await navigator.clipboard.writeText(window.location.href);
                showCopyFeedback();
              } catch (err) {
                console.error('Failed to copy: ', err);
              }
            }
            return;
        }
        if (shareUrl) {
          window.open(shareUrl, '_blank', 'width=600,height=450,noopener,noreferrer');
        }
        if (isOpen) toggleDropdown();
      });
    });

    document.addEventListener('click', handleClickOutside);

    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && isOpen) {
        toggleDropdown();
      }
    });

    // Cleanup
    return () => {
      document.removeEventListener('click', handleClickOutside);
    };
  });
</script>
